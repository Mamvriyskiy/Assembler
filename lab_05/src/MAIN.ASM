EXTRN INPUT_NUM_MENU: NEAR
EXTRN INPUTNUMBER: NEAR
EXTRN OUTPUT_SIGNED_HEX: NEAR
EXTRN OUTPUT_UNSIGNED_BIN: NEAR

EXTRN NEWLINE: NEAR
PUBLIC EXIT

STACKSEG SEGMENT PARA STACK 'STACK'
    DB 400H DUP(0)
STACKSEG ENDS

DATASEG SEGMENT PARA PUBLIC 'DATA'
    MENU DB 'Menu: ', 13, 10, 10
        DB '1. Input unsigned decimal number', 13, 10
        DB '2. Convert to unsigned binary', 13, 10
        DB '3. Convert to signed hexadecimal', 13, 10
        DB '0. Exit.', 13, 10, 10
        DB 'Choose action: $'
    ACTIONS DW EXIT, INPUTNUMBER, OUTPUT_UNSIGNED_BIN, OUTPUT_SIGNED_HEX
DATASEG ENDS

CODESEG SEGMENT PARA PUBLIC 'CODE'
    ASSUME CS:CODESEG, DS:DATASEG, SS:STACKSEG

OUTPUT_MENU PROC NEAR
    MOV AH, 9
    MOV DX, OFFSET MENU
    INT 21H
    RET
OUTPUT_MENU ENDP

EXIT PROC NEAR
    MOV AX, 4c00h
    INT 21H
EXIT ENDP

MAIN:
    MOV AX, DATASEG
    MOV DS, AX

    MAINLOOP:
        CALL OUTPUT_MENU
        CALL INPUT_NUM_MENU
        CALL NEWLINE
        CALL ACTIONS[SI]
        JMP MAINLOOP

CODESEG ENDS
END MAIN
